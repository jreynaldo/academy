
allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 11
    sourceCompatibility = 11

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }



    task view_paths {
        doLast { task ->
            println "$task.project.name"
            println "------------------"
            println "Main: $sourceSets.main.java.srcDirTrees"
            println "   Resources: $sourceSets.main.resources.srcDirTrees"
            println "Tests: $sourceSets.test.java.srcDirTrees"
            println "   Resources: $sourceSets.test.resources.srcDirTrees"
        }
    }
}

subprojects {
    group = "com.solution.${rootProject.name}"

    sourceSets {
        main {
            java { srcDirs = ['main'] }
            resources { srcDirs = ['main/resources'] }
        }
        test {
            java { srcDirs = ['test'] }
            resources { srcDirs = ['test/resources'] }
        }
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web:2.4.5'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.5'
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:2.4.5'
        implementation 'org.springframework.boot:spring-boot-starter-integration:2.4.5'
        implementation 'org.springframework.integration:spring-integration-amqp'
        implementation 'org.springdoc:springdoc-openapi-ui:1.5.9'
        compileOnly 'org.projectlombok:lombok'

        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.reflections:reflections:0.9.11'
        implementation 'io.github.cdimascio:java-dotenv:5.1.3'
// https://mvnrepository.com/artifact/org.postgresql/postgresql
        implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.20'



        testImplementation 'com.github.javafaker:javafaker:1.0.1'


        testImplementation rootProject.sourceSets.main.output
        testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.5'

        if (project.name != "shared") {
            implementation project(":shared")
            testImplementation project(":shared").sourceSets.test.output
        }
    }
    bootJar{
        enabled = false
    }

    jar{
        enabled = true
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.4.5')
    }
}

sourceSets {
    main {
        java { srcDirs = ['apps/main'] }
        resources { srcDirs = ['apps/main/resources'] }
    }

    test {
        java { srcDirs = ['apps/test'] }
        resources { srcDirs = ['apps/test/resources'] }
    }
}

apply plugin: 'application'

bootJar {
    baseName = 'sgv'
    version = '0.0.1'
}

mainClassName = 'com.solution.apps.Starter'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-integration:2.4.5'
    implementation 'org.springframework.integration:spring-integration-amqp'


    implementation project(":shared")
    implementation project(":sales")
    implementation 'org.projectlombok:lombok:1.18.18'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.8.RELEASE'
    testImplementation project(":shared").sourceSets.test.output
}